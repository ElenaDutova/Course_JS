"use strict";

/* Lesson 19. Callback functions */

/* Напишем функцию с названием learnJS() и передадим в качестве аргументов lang и callback.
Это означает, что в дальнейшем в другую функцию в качестве аргумента мы можем передать другую функцию.

Чтобы мы могли выполнить callback функцию (которая будет передана как аргумент в дальнейшем)
мы вызываем ее в теле функции:*/

function learnJS(lang, callback) {
    console.log(`Я изучаю ${lang}!`);
    callback();
}

/* Такая запись означает, что у нас сперва выполнится одна функция
 и только после нее выполнится другая (callback) */

/* Вызовем функцию learnJS() и в качестве аргументов передадим строку и другую функцию: */

// learnJS("JavaScript", function(){
//     console.log("Я прохожу урок про callback-функции!");
// });

/* Можно заметить, что в коде выше мы создали анонимную функцию,
т.е. функцию без имени. 
Это значит, что после выполнения она исчезнет и мы к ней никак не сможем обратиться далее по коду. */

/* Также можно передавать уже созданные функции: */

function done() {
    console.log("Я прохожу урок про callback-функции!");
}

learnJS("JavaScript", done);

/* Важно прописать название функции без круглых скобок, потому что мы не вызываем ее в настоящий момент, 
а просто передаем ее, чтобы она была использована в дальнейшем! */
"use strict";

/* Lesson 6 Data type */
    
{ /* ПРОСТЫЕ ТИПЫ ДАННЫХ */
    /* Задали изменяемую переменную с именем number со значением 10.5 (относится к простому типу данных - числа): */
    let number = 10.5; 

    /* При выполнении такой команды мы получим значение Infinity - бесконечность,
    также относится к простому типу данных - числа.
    Если использовать отрицательное число - получим -Infinity - бесконечность со знаком минус*/
    console.log(10/0);

    /* При выполнении такой команды мы получим значение NaN - Not A Number - нелогичное выражение,
    также относится к простому типу данных - числа.*/
    console.log('string' * 15);


    /* Задали НЕизменяемую переменную с именем myName со значением "Lena",
    (относится к простому типу данных - строка).
    При написании значения в формате строки всегда используются кавычки - "", '', ``.*/
    const myName = "Lena";


    /* Задали НЕизменяемую переменную с именем bool со значением true,
    (относится к простому типу данных - логический тип данных - Boolean,
    принимает значение true или false). */
    const bool = true;


    /* Через команду console.log обращаемся к переменной с именем something.
    Но такой переменной не существует в нашем коде, 
    поэтому в консоли разрабочика мы можем увидеть следующее значение: "somethingRed is not defined".
    Когда чего-то не существует - этот тип данных называется null и тоже относится к простому типу данных.
    Так уж получилось, что выскакивание чистого значения null случается очень-очень редко.
    Чаще всего мы будем читать сообщение по типу вышенаписанного. */
    /* console.log(somethingRed); */


    /* Через команду console.log обращаемся к переменной с именем bird.
    Но так как переменной не присвоено никакой значение, мы получим в консоли значение - underfined.
    Это тип данных, когда что-то существует, но у него нет абсолютно никакого значения */
    let bird;
    console.log(bird);

    /* Также существуют такие типы простых данных,
    как Symbol - технический тип данных
    и BigInt - числа больше 2 в 53 степени. */
}

{ /* КОМПЛЕКСНЫЕ ТИПЫ ДАННЫХ. ОБЪЕКТЫ. */
    { /* Обычный объект 
        - это коллекция данных, структура, которая используется для хранения различных типов данных.
        Содержит в себе данные, называемые свойствами объекта:*/
        const object = {
            name: "Lena",
            age: 24,
            isCat:  false
        };

        const obj = {
            name: "Roma",
            age: 29,
            isCat:  false
        };
        
        /* Чтобы обратиться к свойству объекта используем написание через . или через [""] : */
        console.log(object.age);
        /* console.log(obj["name"]); */
        /* Предпочтительнее использование черех . */
    }
    { /* Массив - структура, в которой любые данные храняться строго по порядку.
        Является частным случаем объекта.
        Каждый элемент массива имеет свой порядковый номер. */

        let arr = ["apple", {}, "orange", "plum", [], "cherry", 8];
        /* Важно учитывать, что в программировании счет начинается не с 1, как в математике, а с нуля. 
        Поэтому, чтобы получить значение cherry через console.log 
        нам следует запросить 3 по порядку значение, а не 4: */
        console.log(arr[3]);
    }
}